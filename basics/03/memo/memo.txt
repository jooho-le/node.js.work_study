3-1>
파일이나 디렉터리 경로를 다룰 수 있는 함수들이 포함된 path모듈 

절대경로 : 파일이나 폴더의 위치를 루트 폴더부터 시작해서 파일까지 전부 다 나타내는 것 
상대경로 : 기준이 되는 파일이 있을 때 사용하는 경로로 현재폴더 기준으로 상/하위 폴더로 이동함
    cd 경로 입력하여 이동 

경로 연결 
path.join('경로1', '경로2', ,,) // 경로1\경로2\,,

경로만 추출
path.dirname(경로)

파일 이름 추출
path.basename(경로)
path.basename(경로, 확장자) // 파일 확장자를 제외한 이름만 추출할 때는 확장자를 지정 

확장자 추출 
path.extname(경로)

경로를 객체로 반환 
path.parse(경로)

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3-2>
파일의 내용을 읽거나 기록하는 등 파일을 관리할 떄 사용하는 File System모듈 

동기 처리로 디렉터리 읽기 
fs.readdirSync(경로[, 옵션])

비동기 처리로 디렉터리 읽기
fs.readdir(경로[, 옵션], 콜백)

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3-3>
fs모듈을 통해 파일 읽을 때는 readFileSync함수나 readFile함수 사용 

동기 처리로 파일읽기 -> readFileSync함수
파일 내용을 버퍼 또는 문자열 형태로 반환 

비동기 처리로 파일읽기 -> readFile함수
파일 내용을 버퍼 또는 문자열로 반환 

fs모듈에서 파일에 내용을 기록할 때는 writeFileSync함수나 writeFile함수 사용 
flag옵션을 어떻게 사용하느냐에 따라 기존 파일에 다른 내용 추가 가능 

동기처리로 파일에 쓰기 -> writeFileSync

    파일 존재 여부 체크하기 -> existsSyne함수
    파일에 기록하는 함수 사용할 때 기록할 대상인 파일이 이미 존재하는지 여부 체크해야함
    만약 있는데 다시 기록하면 기존에 기록된 내용 사라짐 
    파일이 있다면 true, 없다면 false 반환 

비동기처리로 파일에 쓰기 -> writeFile함수 

기존 파일에 내용 추가하기 -> flag옵션
이미 존재하는 파일에 기존내용 유지하면서 새로운 내용 추가해야 할 때 사용 

flag옵션 사용하지않고 기존 파일에 내용 추가하기 -> appendFileSync, appendFile함수

파일 삭제하기 -> unlinkSync, unlink함수

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3-4>
디렉터리 만들기 -> mkdirSync, mkdir함수

여러 개층의 디렉터리를 만들고 싶을 때 -> recursive옵션 사용 
이 옵션을 true로 지정하면 존재하지 않던 상위 폴더까지 한꺼번에 만들 수 있음 

빈 데릭터리 삭제하기 -> rmdirSync, rmdir함수
디렉터리가 비어있어야 삭제 가능 

파일 삭제 및 내용이 있는 디렉터리 삭제하기 -> rmSync, rm함수

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3-5>
버퍼 : 임시 데이터를 저장하는 물리적인 메모리 공간 
파일을 읽어 올 때 전체 내용을 한꺼번에 다 가져오지 않고 한번에 버퍼 하나 크기 만큼만 가져오고 버퍼가 가득 차면 그 내용을 전달해줌 
노드의 버퍼는 처음부터 크기가 고정되어 있고 내용이 이진값으로 저장됨 

~스트림