5-1>
스레드 : 작업을 처리하기 위해 자원을 사용하는 단위 즉 하나의 작업이 실행되는 최소 단위 

자바스크립트는 싱글 스레드 언어이기 때문에 코드를 실행하면 작성한 순서대로 결과가 나옴
자바를 비롯한 대부분의 백엔드 언어는 멀티 스레드 언어여서 동시에 여러 작업 실행 가능 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

5-2>
노드에서는 노드가 논블로킹 I/O로 동작하기 때문에 대부분의 작업을 비동기로 처리 

I/O : 인풋과 아웃풋을 나타내며 자료를 주고받는다는 의미로 생각 
블로킹 : 코드 실행을 중간에 막는 것으로 코드 실행이 멈춘다는 뜻 

동기함수를 사용하면 블로킹 즉 코드 실행을 막는 현상이 발생 
서버를 사용할 때 블로킹은 큰 문제가 됨 
블로킹이 되면 서버가 뻗는 증상이 나타남 
-> 블로킹이 생기지 않게 비동기 처리를 이용해야 함 

비동기 처리를 하면 코드를 실행하다가 시간이 걸리는 작업은 잠시 옆으로 빼놓고 즉시 실행해야 할 작업 먼저 처리를
옆으로 빼놓은 비동기 작업은 이벤트 루프에서 처리해 줌 

백엔드 개발을 할 떄 네트워크를 통해 클라이언트와 서버간에 자료를 주고받아야 하는 작업에서는 주고받는 데이터 양도 다르고 네트워크 속도도 일정하지 않아 시간 지연을 항상 고려해야 함 
그래서 중간에 멈추는 일이 없도록 비동기 처리를 하는데 이것은 논블로킹 I/O라고 함 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

5-3>
노드는 V8엔진을 사용해서 자바스크립트 코드 실행 
V8엔진 안에 콜 스택이라는 요소가 있어 순서대로 작업을 가져와 처리 
V8엔진의 콜 스택은 실행할 순서대로 함수를 가져오므로 비동기 처리를 할 수 없음 
그래서 V8엔진에서 비동기 처리할 수 있는 libuv라이브러리 가져옴 

libuv 구성 요소 : Node API , 콜백 큐 
콜백 큐 : 콜함 함수가 큐 형태로 저장되는 공간 

노드는 콜스택을 사용해 코드를 작성한 순서대로 실행하지만 시간이 많이 걸리는 작업을 만나면 잠시 콜백 큐에 저장해 두었다가 콜 스택이 비면 하나씩 꺼내 와 처리 
이 과정을 이벤트 루프라고 함 
이벤트 루프의 이런 동작 방식은 비동기 작업을 효율적으로 처리하고 코드의 블로킹을 최소화하여 더 나은 성능을 제공 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

5-4>
노드에서 비동기 처리할 때 주로 사용하는 방식 : 콜백함수 , promise, async/await

콜백함수는 콜백지옥에 빠지기 쉬워 프라미스 방식 도입 해서 사용 