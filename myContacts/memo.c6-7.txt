6-2>
익스프레스 프레임워크의 중요 특징 하나는 라우팅이 쉽다는 것 

라우트 파라미터 : 요청 URL과 함께 담아서 요청하는 값    
    기본형 -> /요청 URL/:id

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

6-3>
클라이언트와 서버 사이의 통신은 요청 객체와 응답 객체를 통해 주고받음
요청객체 - 클라이언트에서 서버로 넘겨주는 요청 정보 담음
응답객체 - 서버에서 클라이언트로 보내는 응답 정보 담음 

요청객체
req.body : 서버로 POST요청할 떄 넘겨준 정보 담음
req.cookies : 클라이언트에 저장된 쿠키 정보를 서버로 함께 넘겼을 경우 쿠키 정보 담음 
req.headers : 서버로 요청을 보낼 때 같이 보낸 헤더 정보 담음
req.params : URL뒤에 라우트 파라미터가 포함되어 있을 경우 파라미터 정보를 담음
req.query : 요청 URL에 포함된 질의 매개변수(쿼리)를 담음 

응답객체 함수 
res.download : 파일을 내려받음
res.end : 응답 프로세서 종료
res.json : JSON응답 전송
res.jsonp : JOONP 지원을 통해 JSON응답 전송
res.redirect : 요청 경로를 재지정해서 강제 이동 
res.render : 뷰 템플릿을 화면에 랜더링
res.send : 어떤 유형이든 res.send() 괄호 안의 내용을 전송
res.sendFile : 지정한 경로의 파일을 읽어서 내용을 전송 
res.sendStatus :상태 메시지와 함께 HTTP상태 코드를 전송
res.status : 응답의 상태 코드를 설정 


res.send함수 : 문자열이나 객체, 배열 등 괄호 안의 내용을 클라이언트로 전송하는 함수 Content-Type: 헤더를 자동으로 만들고 내용을 JSON형식으로 변환하거나 일반 텍스트로 전송 

res.sendFile함수 : 요청이 들어왔을 때 특정 HTML문서를 보여줄 때 사용 함수에서 지정한 파일을 읽어와서 그 내용을 응답으로 전송 

res.seatus함수 : 상태 코드를 지정 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

7-1>
미들웨어 : 요청과 응답 중간에 있으면서 요청을 처리하거나 원하는 형태로 응답을 수정하는 함수 

파싱 : 요청된 값을 애플리케이션에서 읽을 수 있는 형태로 변환하는 것 

미들웨어가 처리하는 일 
요청 전처리 : 요청이 서버에 도착하기 전에 실행하는 작업 
라우팅 처리 : 라우트 코드를 더 읽기 쉽고 관리하기 쉽도록 모듈화 
응답 처리 : 서버에서 클라이언트로 응답을 보낼 떄 자료를 적절한 형태로 변환하거나 오류를 처리 

익스프레스에서는 라우터 객체를 통해 라우트 코드를 정리 -> 코드를 읽기 쉽고 관리하기 쉬워짐 
라우터 객체를 사용한 것을 라우터 미들웨어라고 하고 라우터 미들웨어는 요청(req)이 오면 응답(res)할 때 까지의 중간 처리를 맡은 함수 

app.use함수 : 애플리케이션에서 미들웨어를 사용하기 위해 어떤 것을 사용할 것인지 알려주어야 한느데 이때 실행할 미들웨어를 등록할때 사용 하는 함수 
    경로 옵션을 사용할 수 있는데 경로를 따로 지정하지 않으면 애플리케이션 전체에서 해당 미들웨어를 사용하겠다는 뜻이고 경로를 지정하면 그 경로로 요청할 때만 해당 미들웨어를 사용한다는 뜻 

바디파서 미들웨어 : 서버로 요청을 보낼 때 요청 본문에 담긴 것을 파싱하는 미들웨어 
    서버로 넘어온 자료를 프로그램에서 사용하기 위해 그 내용을 파싱해서 객체에 할당할 때 사용 하는 것 
    